 Let's take a step back and look at our scatter plot between friend count and age. This scatter plot keeps us really close to the data because we are visualizing every point in the data set. In general, it's not possible to judge important quantities from such a display. Sometimes you want to understand how the mean or median of a variable. Varies with another variable. That is it can be helpful to summarize the relationship between two variables in other ways rather than just always plotting every single point. For example we can ask how does the average friend count vary over age. To do this, we could start by creating a table that for each age it gives us the mean and median for income. To do this we're going to need to learn some new code. To create the table, we're going to use the R package called D Plyr. I'm going to install and load that package now. The D Plyr package lets us split up a data frame and apply a function to some parts of the data. Some of the common functions you might use are filter, group by, mutate and arrange. You can learn more about the deplier package and browse there some examples from the links and the instructor notes. For now we'll work through an example together. So the first thing that I want to do is that I want to group my data frame by age. I'm going to save this grouping in a new variable called age groups. Next I want to summarize this new group in enough data And create new variables of mean thread count, median friend count and the number people in each group. So we're going to summarize our variable that we just created, age groups. Now right after I enter the data frame that I want to work on. I'm going to enter the variables that I want to create. So I want the friend count mean, and I get that by just taking the mean of the variable friend count. And I want the friend count median. And finally I want the number of users in each group. This in function can only be used for summarise, and it reports how many people are really in each group. The last thing I want to do is save this result into a new variable. I'll use the same dataframe abbreviation, and then add FCbyAge, since we have friend count by age. Running this code, I can see that I get a new dataframe with 101 observations, or groups, and four different variables. Using the head command, I can print out the first couple rows to examine the data from. So notice, I have age, friend count mean, friend count median, and n, the number of users in each group. Now the state of frame isn't in any order. So I'm going to rearrange my data frame so that way the ages go from lowest to high. I'll just use the arrange function on the current data frame and arrange it by age. I'll save the result over the variable I just had and now heading out the data frame I can see that I have everything in order. Now this may seem like a lot of codes, so I really encourage you to take your time and to review the code and the example. Make sure that you know what each piece is doing. So that way you can write this code on your own. The two things that I really want to point out is that we need to pass in a data frame, or a grouping, at the beginning of each function. We also need to save the result into a new variable, and we pass that into the next function. This is what makes it difficult to understand this code at first, so I'm going to show you one other way to get this same table. To start, we're just going to take our data set and apply some function to it. To do that, I'm going to use the percent period percent symbol. This allows me to chain functions onto our data set. So I'm going to perform one function at a time. One after another on pf. The first thing I'll do is group my data set by age. Now I'm going to chain on one more function. I'm going to summarize the result using friend count mean. Friend count median, and an. And finally, I'll add one more function, using this chain command, the percent period percent, and this time I'll arrange my data frame, by age. All of this code will produce, this exact data frame, so I want to make sure I save it to a variable. I'll save it to pf, friend count by age, and I'll head the data frame just like before so that way we can check our result. Running this code, we see that we get the same exact result, we have age, friend count mean, friend count median, and, and the number of users in each age group. Printing out more rows, we can carefully scrutinize the table to learn about the relationship between age and friend count. We can already notice that on average. Users who are age 13 have slightly lower friend counts than those who are 14. It also looks like the mean friend count peaks at age 16 and age 17. Now, of course, we don't want to be summarizing and digging through tables like this. This is very tedious. We could show these observations more effectively with a visualization. So let's plot this table of averages. This is going to be your next programming assignment. I want you to plot the average friend count versus age. Make sure that you use the the appropriate data set. We're using this new data set here that we just created. And be sure that you have the appropriate variable names. They're different from before. Create your plot in our studio and then check your work with ours.
