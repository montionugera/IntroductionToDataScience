data(diamonds)
library(ggplot2)
data(diamonds)
summary(diamonds)
names(diamonds)
count(diamonds)
table(diamonds)
diamonds
levels(reddit$age.range)
summary(diamonds)
is.factor(diamonds$carat)
is.factor(diamonds$cut)
is.factor(diamonds$color)
is.factor(diamonds$clarity)
is.factor(diamonds$clarity)
is.factor(diamonds$depth)
is.factor(diamonds$table)
is.factor(diamonds$price)
is.factor(diamonds$x)
is.factor(diamonds$y)
is.factor(diamonds$z)
?diamonds
qplot(x = friend_count, data = pf)
qplot(x = price, data = diamonds)
summary(diamonds$price)
subset(diamonds, price < 500)
nrow(subset(diamonds, price < 500))
setwd('~/WorkSpace/Udemy-Datascience/IntroductionToDataScience/EDA-DataAnalyse/L3')
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv',sep = '\t')
summary(sqrt(pf$www_likes_received))
summary(sqrt(pf$likes_received))
pf$www_likes_received
pf$likes_received
ggplot(aes(x = www_likes_received, y = likes_received), data = pf)+
geom_point( alpha =  0.05 , color ='orange')+scale_x_log10()+scale_y_log10()
library(alr3)
install.packages('alr3')
library(alr3)
data("Mitchell")
?Mitchell
head(Mitchell)
ggplot(aes(x='Temp',y='Month')) + geom_point()
ggplot(aes(x='Temp',y='Month'),data = Mitchell) + geom_point()
ggplot(aes(x='Temp',y='Month'),data = Mitchell) + geom_point()
summary()Mitchell$Month)
summary(Mitchell$Month)
ggplot(aes(x=Temp,y=Month),data = Mitchell) + geom_point()
ggplot(aes(y=Temp,x=Month),data = Mitchell) + geom_point()
summary(Mitchell$Temp)
ggplot(aes(y=Temp,x=Month),data = Mitchell) + geom_point()+xlim(0,12)
ggplot(aes(y=Temp,x=Month),data = Mitchell) + geom_point()+xlim(13,24)
ggplot(aes(y=Temp,x=Month),data = Mitchell) + geom_line()
cor.test(Mitchell$Month,Mitchell$Temp)
ggplot(aes(y=Temp,x=Month),data = Mitchell) + geom_point()+
scale_x_discrete(0,203,12)
)```
ggplot(aes(y=Temp,x=Month),data = Mitchell) + geom_point()+
scale_x_discrete(0,203,12)
ggplot(aes(y=Temp,x=Month),data = Mitchell) + geom_point()+
scale_x_discrete(breaks = seq(0,203,12))
ggplot(aes(y=Temp,x=Month%%12),data = Mitchell) + geom_point()+
scale_x_discrete(breaks = seq(0,203,12))
ggplot(aes(y=Temp,x=Month),data = Mitchell) + geom_point()
cor.test(Mitchell$Month,Mitchell$Temp)
ggplot(aes(y=Temp,x=Month),data = Mitchell) + geom_point()+
scale_x_discrete(breaks = seq(0,203,12))
ggplot(aes(y=Temp,x=Month%%12),data = Mitchell) + geom_point()+
scale_x_discrete(breaks = seq(0,203,12))
group_by(pf,age)
summary(pf$age)
age_groups <- group_by(pf, age)
library(dplyr)
group_by(pf,age)
summary(pf$age)
age_groups <- group_by(pf, age)
age_groups
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n() ) #number of user each group
View(pf.fc_by_age)
ggplot(data = pf.fc_by_age, aes(x=age , y = friend_count_mean))+
geom_line()
head(pf.fc_by_age,10)
pf.fc_by_age[17:19,]
pf$age_with_months <- pf$dob_year +(12-pf$dob_month)/12
pf$age_with_months
pf$age_with_months <- pf$age +(12-pf$dob_month)/12
pf$age_with_months
age_month_group <-group_by(pf,age_with_months)
pf.fc_by_age_months <- summarise(age_month_group,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n() ) #number of user each group
ggplot(aes(x = age_with_months, y = friend_count_mean), data = pf.fc_by_age_months) +
geom_line()
?arrange()
pf.fc_by_age_months <- arrange(pf.fc_by_age_months, age_with_months)
head(pf.fc_by_age_months)
ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age_months,pf.fc_by_age_months$age_with_months < 71)) +
geom_line()
grid.arrange(p2,p1,col=1)
p2 <- ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age,pf.fc_by_age$age < 71)) +
geom_line()
grid.arrange(p2,p1,col=1)
library(gridExtra)
grid.arrange(p2,p1,ncol=1)
p1 <- ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age_months,pf.fc_by_age_months$age_with_months < 71)) +
geom_line()
p2 <- ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age,pf.fc_by_age$age < 71)) +
p2 <- ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age,pf.fc_by_age$age < 71)) +
geom_line()
p2 <- ggplot(aes(x = age, y = friend_count_mean), data = subset(pf.fc_by_age,pf.fc_by_age$age < 71)) +
geom_line()
p1 <- ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age_months,pf.fc_by_age_months$age_with_months < 71)) +
geom_line()
grid.arrange(p2,p1,ncol=1)
p3 <- ggplot(aes(x = round(age/5)*5, y = friend_count_mean), data = subset(pf.fc_by_age,pf.fc_by_age$age < 71)) +
geom_line()
grid.arrange(p2,p1,p3,ncol=1)
p3 <- ggplot(aes(x = round(age/5)*5, y = friend_count_mean), data = subset(pf,pf$age < 71)) +
geom_line()
grid.arrange(p2,p1,p3,ncol=1)
p3 <- ggplot(aes(x = round(age/5)*5, y = friend_count), data = subset(pf,pf$age < 71)) +
geom_line()
grid.arrange(p2,p1,p3,ncol=1)
p3 <- ggplot(aes(x = round(age/5)*5, y = friend_count), data = subset(pf,pf$age < 71)) +
geom_line(stat = 'summary', fun.y= mean
grid.arrange(p2,p1,p3,ncol=1)
p3 <- ggplot(aes(x = round(age/5)*5, y = friend_count), data = subset(pf,pf$age < 71)) +
geom_line(stat = 'summary', fun.y= mean)
grid.arrange(p2,p1,p3,ncol=1)
p1 <- ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age_months,pf.fc_by_age_months$age_with_months < 71)) +
geom_line() + geom_smooth()
p2 <- ggplot(aes(x = age, y = friend_count_mean), data = subset(pf.fc_by_age,pf.fc_by_age$age < 71)) +
geom_line()+ geom_smooth()
p3 <- ggplot(aes(x = round(age/5)*5, y = friend_count), data = subset(pf,pf$age < 71)) +
geom_line(stat = 'summary', fun.y= mean)
grid.arrange(p2,p1,p3,ncol=1)
source('~/.active-rstudio-document', echo=TRUE)
diamonds
summary(diamonds$x)
by(diamonds$price, diamonds$cut, summary)
by(diamonds$price, diamonds$x, summary)
ggplot(data = diamonds,aes(x= x,y=prices)) + geom_point()
ggplot(data = diamonds,aes(x= x,y=price)) + geom_point()
cor.test(diamonds$x,diamonds$price)
cor.test(diamonds$y,diamonds$price)
cor.test(diamonds$z,diamonds$price)
getwd()
setwd('~/WorkSpace/Udemy-Datascience/IntroductionToDataScience/EDA-DataAnalyse/L3')
?geom_smooth
ggplot(aes(x = www_likes_received, y = likes_received), data = pf)+
geom_point()+
xlim(0,quantile(pf$www_likes_received, 0.95)) +
ylim(0,quantile(pf$www_likes, 0.95)) +
geom_smooth(method = 'lm', color = 'red')
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv',sep = '\t')
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point()
qplot(x = age, y = friend_count, data = pf)
names(diamonds)
ggplot(data = diamonds,aes(x=depth ,y=price)) + geom_point()
?diamonds
ggplot(data = diamonds,aes(x=depth ,y=price)) + geom_point()
names(diamonds)
?diamonds
ggplot(data = diamonds,aes(x=depth ,y=price)) + geom_point()
ggplot(data = diamonds,aes(x=depth ,y=price)) + geom_point(alpha = 0.05)
ggplot(data = diamonds,aes(x=depth ,y=price)) + geom_point(alpha = 0.05, position = position_jitter(h = 0 ))
ggplot(data = diamonds,aes(x=depth ,y=price)) + geom_point(alpha = 0.01) +
scale_x_continuous(lim = c(0,2))
ggplot(data = diamonds,aes(x=depth ,y=price)) + geom_point(alpha = 0.01) +
scale_x_continuous(breaks = seq(50,70,2))
summary(diamons$depth)
summary(diamonds$depth)
ggplot(data = diamonds,aes(x=depth ,y=price)) + geom_point(alpha = 0.01) +
scale_x_continuous(breaks = seq(61,62,2))
ggplot(data = diamonds,aes(x=depth ,y=price)) + geom_point(alpha = 0.01) +
scale_x_continuous(breaks = seq(43,79,2))
cor.test(diamonds$depth,diamonds$price)
summary(diamonds$carat)
ggplot(data = diamonds,aes(x=depth ,y=carat))
ggplot(data = diamonds,aes(x=depth ,y=carat))
ggplot(data = diamonds,aes(x=carat ,y=price))
summary(diamonds$carat)
ggplot(data = diamonds,aes(x=carat ,y=price))
ggplot(data = diamonds,aes(x=carat ,y=price)) + geom_point()
ggplot(data = diamonds,aes(x=carat ,y=price)) + geom_point() +ylim(fun.y)+
geom_line( stat = 'summary', fun.y = quantile, fun.args = list(probs = .1) ,linetype = 2 , color = 'blue')+
geom_line( stat = 'summary', fun.y = quantile, fun.args = list(probs = .1) ,linetype = 2 , color = 'blue')+
s
ggplot(data = diamonds,aes(x=carat ,y=price)) + geom_point() +ylim(fun.y)+
geom_line( stat = 'summary', fun.y = quantile, fun.args = list(probs = .1) ,linetype = 2 , color = 'blue')
```
ggplot(data = diamonds,aes(x=carat ,y=price)) + geom_point() +
geom_line( stat = 'summary', fun.y = quantile, fun.args = list(probs = .1) ,linetype = 2 , color = 'blue')
ggplot(data = diamonds,aes(x=carat ,y=price)) + geom_point() +
geom_line( stat = 'summary', fun.y = quantile, fun.args = list(probs = .99) ,linetype = 2 , color = 'blue')
summary(diamonds$price)
ggplot(data = diamonds,aes(x=carat ,y=price)) + geom_point() +
ylim = (quantile(diamonds$price,.99) , 18820 )
quantile(diamonds$price,.99)
ggplot(data = diamonds,aes(x=carat ,y=price)) + geom_point() +
ylim = ( 17378.22 ,18820 )
ggplot(data = diamonds,aes(x=carat ,y=price)) + geom_point() +
ylim = ( 17378.22, 18820 )
ggplot(data = subset(diamonds,diamonds$price > top_one_percent_price,aes(x=carat ,y=price)) + geom_point()
ggplot(data = subset(diamonds,diamonds$price > top_one_percent_price),aes(x=carat ,y=price)) + geom_point()
ggplot(data = subset(diamonds,diamonds$price > top_one_percent_price),aes(x=carat ,y=price)) + geom_point()
top_one_percent_price = quantile(diamonds$price,.99)
ggplot(data = subset(diamonds,diamonds$price > top_one_percent_price),aes(x=carat ,y=price)) + geom_point()
ggplot(data = subset(diamonds,diamonds$price > top_one_percent_price),aes(x=carat ,y=price)) + geom_point(alpha = 0.05)
ggplot(data = subset(diamonds,diamonds$price > top_one_percent_price),aes(x=carat ,y=price)) + geom_point(alpha = 0.2)
ggplot(data = subset(diamonds,diamonds$price > top_one_percent_price),aes(x=carat ,y=price)) + geom_point(alpha = 1)
summary(diamonds$volume)
diamonds$volume
names(diamonds)
diamonds$volume <- diamonds$x*diamonds$y*diamonds$z
summary(diamonds$volume)
ggplot(data = diamonds,aes(x=volume ,y=price)) + geom_point(alpha = 1)
summary(diamonds$volume)
ggplot(data = diamonds,aes(x=volume ,y=price)) + geom_point(alpha = 0.02)
count(diamonds$volume == 0)
count(diamonds$volume == 0)
is.numeric(diamonds$volume)
count(diamonds$volume == 0)
library(plyr)
library('plyr')
is.numeric(diamonds$volume)
count(diamonds$volume == 0)
count(diamonds$volume == 0)
ggplot(data = diamonds,aes(x=volume ,y=price)) + geom_point()
ggplot(data = diamonds,aes(x=volume ,y=price)) + geom_point() + ylim(0,100)
ggplot(data = diamonds,aes(x=volume ,y=price)) + geom_point() + xlim(0,2)
is.numeric(diamonds$volume)
summary(diamonds$volume)
ggplot(data = diamonds,aes(x=volume ,y=price)) + geom_point() + xlim(0,170)
ggplot(data = diamonds,aes(x=volume ,y=price)) + geom_point() + xlim(0,180)
ggplot(data = diamonds,aes(x=volume ,y=price)) + geom_point() + xlim(0,580)
ggplot(data = diamonds,aes(x=volume ,y=price)) + geom_point() + xlim(0,1080)
filter_diamonds = subset(diamonds$volume > 0 and diamonds$volume < 800)
filter_diamonds = subset(diamonds$volume > 0 & diamonds$volume < 800)
filter_diamonds = subset(diamonds,diamonds$volume > 0 & diamonds$volume < 800)
cor.test(filter_diamonds$price,filter_diamonds$volume)
ggplot(data = filter_diamonds,aes(x=volume ,y=price)) + geom_point( alpha = 0.05 )
ggplot(data = filter_diamonds,aes(x=volume ,y=price)) + geom_point( alpha = 0.05 ) +
geom_smooth()
diamonds_clarity_group <- group_by(diamonds,clarity)
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
data(diamonds)
data(diamonds)
diamonds
diamondsByClarity <- summarise(diamonds_clarity_group,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n() ) #number of user each group
diamonds_clarity_group <- group_by(diamonds,clarity)
diamondsByClarity <- summarise(diamonds_clarity_group,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n() ) #number of user each group
diamonds_clarity_group <- group_by(diamonds,clarity)
diamondsByClarity <- summarise(diamonds_clarity_group,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n() ) #number of user each group
diamonds_clarity_group
diamondsByClarity <- summarise(diamonds_clarity_group,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price)) #number of user each group
diamondsByClarity <- summarise(diamonds_clarity_group,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n() ) #number of user each group
library(alr3)
detach("package:plyr", unload=TRUE)
diamondsByClarity <- summarise(diamonds_clarity_group,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n() ) #number of data each group
library(dplyr)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
plot_bar_clarity <- ggplot(data= diamonds_mp_by_clarity,aes(x=clarity ,y=mean_price)) + geom_bar()
plot_bar_clarity
plot_bar_clarity <- barplot(diamonds_mp_by_clarity$mean_price)
summary(diamonds_mp_by_clarity$clarity)
plot_bar_clarity <- barplot(diamonds_mp_by_clarity$mean_price,,
names.arg = c("I1",  "SI2",  "SI1",  "VS2",  "VS1",  "VVS2",  "VVS1",  "IF"))
summary(diamonds_mp_by_clarity$clarity)
plot_bar_clarity <- barplot(diamonds_mp_by_clarity$mean_price,,
names.arg = c("IF",  "SI2",  "SI1",  "VS2",  "VS1",  "VVS2",  "VVS1",  "IF"))
diamonds_mp_by_clarity$clarity
diamonds_mp_by_clarity
plot_bar_clarity <- barplot(diamonds_mp_by_clarity$mean_price,ylab = "mean_price", xlab = "Clearity"
names.arg = c("I1",  "SI2",  "SI1",  "VS2",  "VS1",  "VVS2",  "VVS1",  "IF"))
plot_bar_clarity <- barplot(diamonds_mp_by_clarity$mean_price,ylab = "mean_price", xlab = "Clearity",
names.arg = c("I1",  "SI2",  "SI1",  "VS2",  "VS1",  "VVS2",  "VVS1",  "IF"))
$clarity
diamonds_mp_by_clarity
diamonds_mp_by_color
plot_bar_clarity <- barplot(diamonds_mp_by_color$mean_price,ylab = "mean_price", xlab = "Clearity",
names.arg = c("D",  "E",  "F",  "G",  "H",  "I",  "J"))
grid.arrange(plot_bar_clarity,plot_bar_color,col =2)
plot_bar_color <- barplot(diamonds_mp_by_color$mean_price,ylab = "mean_price", xlab = "Clearity",
names.arg = c("D",  "E",  "F",  "G",  "H",  "I",  "J"))
library(gridExtra)
grid.arrange(plot_bar_clarity,plot_bar_color,col =2)
plot_bar_color <- barplot(diamonds_mp_by_color$mean_price,ylab = "mean_price", xlab = "Clearity",
names.arg = c("D",  "E",  "F",  "G",  "H",  "I",  "J"))
grid.arrange(plot_bar_clarity,plot_bar_color,col =2)
plot_bar_clarity <- barplot(diamonds_mp_by_clarity$mean_price,ylab = "mean_price", xlab = "Clearity",
names.arg = c("I1",  "SI2",  "SI1",  "VS2",  "VS1",  "VVS2",  "VVS1",  "IF"))
grid.arrange(plot_bar_clarity,plot_bar_color,ncol =2)
grid.arrange(plot_bar_clarity,plot_bar_color,ncol =1)
library(gridExtra)
grid.arrange(plot_bar_clarity,plot_bar_color,ncol =1)
plot_bar_color
plot_bar_color <- barplot(diamonds_mp_by_color$mean_price,ylab = "mean_price", xlab = "Clearity",
names.arg = c("D",  "E",  "F",  "G",  "H",  "I",  "J"))
plot_bar_clarity
diamonds_mp_by_clarity
plot_bar_clarity <- ggplot(data = diamonds_mp_by_clarity,aes(x = clarity, y = mean_price))
ggplot(data = diamonds_mp_by_clarity,aes(x = clarity, y = mean_price))
ggplot(data = diamonds_mp_by_clarity,aes(x = clarity, y = mean_price))+geom
ggplot(data = diamonds_mp_by_clarity,aes(x = clarity, y = mean_price))+geom_bar()
ggplot(data = diamonds_mp_by_clarity,aes(x = factor(clarity), y = mean_price))+geom_bar()
ggplot(data = diamonds_mp_by_clarity,aes(factor(clarity))+geom_bar()
ggplot(data = diamonds_mp_by_clarity,aes(factor(clarity)) )+geom_bar()
ggplot(data = diamonds_mp_by_clarity,aes(factor(clarity)) )+geom_bar()
ggplot(data = diamonds_mp_by_clarity,aes(factor(clarity),y = mean_price) )+geom_bar()
ggplot(data = diamonds_mp_by_clarity,aes(factor(clarity),y = mean_price) ,stat = 'identity')+geom_bar()
ggplot(data = diamonds_mp_by_clarity,aes(factor(clarity),y = mean_price) )+geom_bar(stat = 'identity')
plot_bar_color <- ggplot(data = diamonds_mp_by_color,
aes(factor(color),y = mean_price) )+
geom_bar(stat = 'identity')
plot_bar_color
grid.arrange(plot_bar_clarity,plot_bar_color,ncol =1)
plot_bar_clarity
geom_b
ggplot(data = diamonds_mp_by_clarity,aes(factor(clarity),y = mean_price) )+ geom_bar(stat = 'identity')
plot_bar_clarity <- ggplot(data = diamonds_mp_by_clarity,
aes(factor(clarity),y = mean_price) )+
geom_bar(stat = 'identity')
plot_bar_clarity
grid.arrange(plot_bar_clarity,plot_bar_color,ncol =2)
?diamonds
?diamonds
grid.arrange(plot_bar_clarity,plot_bar_color,ncol =2)
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar(position="dodge")
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar()
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar()
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar(position="dodge")
ggplot(diamonds, aes(clarity, fill=color)) + geom_bar(position="dodge")
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar(position="dodge")
diamonds_by_cut <- group_by(diamonds, cut)
diamonds_mp_by_cut <- summarise(diamonds_by_cut, mean_price = mean(price))
ggplot(data = diamonds_mp_by_cut,
aes(factor(cut),y = mean_price) )+
geom_bar(stat = 'identity')
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar(position="dodge")
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar(position="dodge",stat = 'identity')
ggplot(diamonds, aes(x = clarity , fill=cut , y = price)) + geom_bar(position="dodge",stat = 'identity',fun.y = mean)
ggplot(diamonds, aes(x = clarity , fill=cut , y = price)) + geom_bar(position="dodge",stat = 'identity')
diamonds_by_cut <- group_by(diamonds, cut,clarity)
diamonds_by_cut_clarity <- group_by(diamonds, cut,clarity)
diamonds_mp_by_cut_clarity <- summarise(diamonds_by_cut_clarity, mean_price = mean(price))
diamonds_mp_by_cut_clarity
ggplot(diamonds_mp_by_cut_clarity, aes(x = clarity , fill=cut , y = price)) + geom_bar(position="dodge",stat = 'identity')
ggplot(diamonds_mp_by_cut_clarity, aes(x = clarity , fill=cut , y = mean_price)) + geom_bar(position="dodge",stat = 'identity')
